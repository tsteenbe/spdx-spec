/**
 * lunr - http://lunrjs.com - A bit like Solr, but much smaller and not as bright - 0.5.12
 * Copyright (C) 2015 Oliver Nightingale
 * MIT Licensed
 * @license
 */
! function() {
    var t = function(e) {
        var n = new t.Index;
        return n.pipeline.add(t.trimmer, t.stopWordFilter, t.stemmer), e & amp; & amp;
        e.call(n, n), n
    };
    t.version = & quot;
    0.5 .12 & quot;, t.utils = {}, t.utils.warn = function(t) {
        return function(e) {
            t.console & amp; & amp;
            console.warn & amp; & amp;
            console.warn(e)
        }
    }(this), t.EventEmitter = function() {
        this.events = {}
    }, t.EventEmitter.prototype.addListener = function() {
        var t = Array.prototype.slice.call(arguments),
            e = t.pop(),
            n = t;
        if ( & quot;
            function & quot; != typeof e) throw new TypeError( & quot; last argument must be a
            function & quot;);
        n.forEach(function(t) {
            this.hasHandler(t) || (this.events[t] = []), this.events[t].push(e)
        }, this)
    }, t.EventEmitter.prototype.removeListener = function(t, e) {
        if (this.hasHandler(t)) {
            var n = this.events[t].indexOf(e);
            this.events[t].splice(n, 1), this.events[t].length || delete this.events[t]
        }
    }, t.EventEmitter.prototype.emit = function(t) {
        if (this.hasHandler(t)) {
            var e = Array.prototype.slice.call(arguments, 1);
            this.events[t].forEach(function(t) {
                t.apply(void 0, e)
            })
        }
    }, t.EventEmitter.prototype.hasHandler = function(t) {
        return t in this.events
    }, t.tokenizer = function(t) {
        return arguments.length & amp; & amp;
        null != t & amp; & amp;
        void 0 != t ? Array.isArray(t) ? t.map(function(t) {
            return t.toLowerCase()
        }) : t.toString().trim().toLowerCase().split(/[\s\-]+/) : []
    }, t.Pipeline = function() {
        this._stack = []
    }, t.Pipeline.registeredFunctions = {}, t.Pipeline.registerFunction = function(e, n) {
        n in this.registeredFunctions & amp; & amp;
        t.utils.warn( & quot; Overwriting existing registered
            function: & quot; + n), e.label = n, t.Pipeline.registeredFunctions[e.label] = e
    }, t.Pipeline.warnIfFunctionNotRegistered = function(e) {
        var n = e.label & amp; & amp;
        e.label in this.registeredFunctions;
        n || t.utils.warn( & quot; Function is not registered with pipeline.This may cause problems when serialising the index.\n & quot;, e)
    }, t.Pipeline.load = function(e) {
        var n = new t.Pipeline;
        return e.forEach(function(e) {
            var i = t.Pipeline.registeredFunctions[e];
            if (!i) throw new Error( & quot; Cannot load un - registered
                function: & quot; + e);
            n.add(i)
        }), n
    }, t.Pipeline.prototype.add = function() {
        var e = Array.prototype.slice.call(arguments);
        e.forEach(function(e) {
            t.Pipeline.warnIfFunctionNotRegistered(e), this._stack.push(e)
        }, this)
    }, t.Pipeline.prototype.after = function(e, n) {
        t.Pipeline.warnIfFunctionNotRegistered(n);
        var i = this._stack.indexOf(e);
        if (-1 == i) throw new Error( & quot; Cannot find existingFn & quot;);
        i += 1, this._stack.splice(i, 0, n)
    }, t.Pipeline.prototype.before = function(e, n) {
        t.Pipeline.warnIfFunctionNotRegistered(n);
        var i = this._stack.indexOf(e);
        if (-1 == i) throw new Error( & quot; Cannot find existingFn & quot;);
        this._stack.splice(i, 0, n)
    }, t.Pipeline.prototype.remove = function(t) {
        var e = this._stack.indexOf(t); - 1 != e & amp; & amp;
        this._stack.splice(e, 1)
    }, t.Pipeline.prototype.run = function(t) {
        for (var e = [], n = t.length, i = this._stack.length, o = 0; n & gt; o; o++) {
            for (var r = t[o], s = 0; i & gt; s & amp; & amp;
                (r = this._stack[s](r, o, t), void 0 !== r); s++);
            void 0 !== r & amp; & amp;
            e.push(r)
        }
        return e
    }, t.Pipeline.prototype.reset = function() {
        this._stack = []
    }, t.Pipeline.prototype.toJSON = function() {
        return this._stack.map(function(e) {
            return t.Pipeline.warnIfFunctionNotRegistered(e), e.label
        })
    }, t.Vector = function() {
        this._magnitude = null, this.list = void 0, this.length = 0
    }, t.Vector.Node = function(t, e, n) {
        this.idx = t, this.val = e, this.next = n
    }, t.Vector.prototype.insert = function(e, n) {
        this._magnitude = void 0;
        var i = this.list;
        if (!i) return this.list = new t.Vector.Node(e, n, i), this.length++;
        if (e < i.idx) return this.list = "new"
        t.vector.node(e, n, i), this.length++;
        for (var = ""
            o = "i,r=i.next;void"
            0 != "r;){if(e&lt;r.idx)return"
            o.next = "new"
            t.vector.node(e, n, r), this.length++; o = "r,r=r.next}return"
            t.vector.node(e, n, r), this.length++
        }, t.vector.prototype.magnitude = "function(){if(this._magnitude)return"
        this._magnitude;
        for (var = ""
            t, e = "this.list,n=0;e;)t=e.val,n+=t*t,e=e.next;return"
            this._magnitude = "Math.sqrt(n)},t.Vector.prototype.dot=function(t){for(var"
            e = "this.list,n=t.list,i=0;e&amp;&amp;n;)e.idx&lt;n.idx?e=e.next:e.idx" > n.idx ? n = n.next : (i += e.val * n.val, e = e.next, n = n.next);
            return i
        }, t.Vector.prototype.similarity = function(t) {
            return this.dot(t) / (this.magnitude() * t.magnitude())
        }, t.SortedSet = function() {
            this.length = 0, this.elements = []
        }, t.SortedSet.load = function(t) {
            var e = new this;
            return e.elements = t, e.length = t.length, e
        }, t.SortedSet.prototype.add = function() {
            var t, e;
            for (t = 0; t < arguments.length; t++) e = arguments[t], ~this.indexof(e) || this.elements.splice(this.locationfor(e), 0, e);
            this.length = this.elements.length
        }, t.sortedset.prototype.toarray = function() {
            return this.elements.slice()
        }, t.sortedset.prototype.map = "function(t,e){return"
        this.elements.map(t, e)
    }, t.sortedset.prototype.foreach = "function(t,e){return"
    this.elements.foreach(t, e)
}, t.sortedset.prototype.indexof = "function(t){for(var"
e = "0,n=this.elements.length,i=n-e,o=e+Math.floor(i/2),r=this.elements[o];i" > 1;) {
    if (r === t) return o;
    t & gt;
    r & amp; & amp;
    (e = o), r & gt;
    t & amp; & amp;
    (n = o), i = n - e, o = e + Math.floor(i / 2), r = this.elements[o]
}
return r === t ? o : -1
}, t.SortedSet.prototype.locationFor = function(t) {
    for (var e = 0, n = this.elements.length, i = n - e, o = e + Math.floor(i / 2), r = this.elements[o]; i & gt; 1;) t & gt;
    r & amp; & amp;
    (e = o), r & gt;
    t & amp; & amp;
    (n = o), i = n - e, o = e + Math.floor(i / 2), r = this.elements[o];
    return r & gt;
    t ? o : t & gt;
    r ? o + 1 : void 0
}, t.SortedSet.prototype.intersect = function(e) {
    for (var n = new t.SortedSet, i = 0, o = 0, r = this.length, s = e.length, a = this.elements, h = e.elements;;) {
        if (i & gt; r - 1 || o & gt; s - 1) break;
        a[i] !== h[o] ? a[i] < h[o] ? i++ : a[i] > h[o] & amp; & amp;
        o++: (n.add(a[i]), i++, o++)
    }
    return n
}, t.SortedSet.prototype.clone = function() {
    var e = new t.SortedSet;
    return e.elements = this.toArray(), e.length = e.elements.length, e
}, t.SortedSet.prototype.union = function(t) {
    var e, n, i;
    return this.length & gt; = t.length ? (e = this, n = t) : (e = t, n = this), i = e.clone(), i.add.apply(i, n.toArray()), i
}, t.SortedSet.prototype.toJSON = function() {
    return this.toArray()
}, t.Index = function() {
    this._fields = [], this._ref = & quot;
    id & quot;, this.pipeline = new t.Pipeline, this.documentStore = new t.Store, this.tokenStore = new t.TokenStore, this.corpusTokens = new t.SortedSet, this.eventEmitter = new t.EventEmitter, this._idfCache = {}, this.on( & quot; add & quot;, & quot; remove & quot;, & quot; update & quot;, function() {
        this._idfCache = {}
    }.bind(this))
}, t.Index.prototype.on = function() {
    var t = Array.prototype.slice.call(arguments);
    return this.eventEmitter.addListener.apply(this.eventEmitter, t)
}, t.Index.prototype.off = function(t, e) {
    return this.eventEmitter.removeListener(t, e)
}, t.Index.load = function(e) {
    e.version !== t.version & amp; & amp;
    t.utils.warn( & quot; version mismatch: current & quot; + t.version + & quot; importing & quot; + e.version);
    var n = new this;
    return n._fields = e.fields, n._ref = e.ref, n.documentStore = t.Store.load(e.documentStore), n.tokenStore = t.TokenStore.load(e.tokenStore), n.corpusTokens = t.SortedSet.load(e.corpusTokens), n.pipeline = t.Pipeline.load(e.pipeline), n
}, t.Index.prototype.field = function(t, e) {
    var e = e || {},
        n = {
            name: t,
            boost: e.boost || 1
        };
    return this._fields.push(n), this
}, t.Index.prototype.ref = function(t) {
    return this._ref = t, this
}, t.Index.prototype.add = function(e, n) {
    var i = {},
        o = new t.SortedSet,
        r = e[this._ref],
        n = void 0 === n ? !0 : n;
    this._fields.forEach(function(n) {
        var r = this.pipeline.run(t.tokenizer(e[n.name]));
        i[n.name] = r, t.SortedSet.prototype.add.apply(o, r)
    }, this), this.documentStore.set(r, o), t.SortedSet.prototype.add.apply(this.corpusTokens, o.toArray());
    for (var s = 0; s < o.length; s++) {
        var 0 = "==e?!0:e;if(this.documentStore.has(n)){var"
        a = "o.elements[s],h=this._fields.reduce(function(t,e){var"
        n = "i[e.name].length;if(!n)return"
        t;
        var = ""
        o = "i[e.name].filter(function(t){return"
        t = "==a}).length;return"
        t + o = ""
        n * e.boost
    }, 0);
this.tokenstore.add(a, {
    ref: r,
    tf: h
})
}
n && this.eventemitter.emit("add", e, this)
}, t.index.prototype.remove = "function(t,e){var"
i = "this.documentStore.get(n);this.documentStore.remove(n),i.forEach(function(t){this.tokenStore.remove(t,n)},this),e&amp;&amp;this.eventEmitter.emit(&quot;remove&quot;,t,this)}},t.Index.prototype.update=function(t,e){var"
e = "void" + t;
if (object.prototype.hasownproperty.call(this._idfcache, e)) return = ""
this._idfcache[e];
var = "" > 0 & amp; & amp;
(i = 1 + Math.log(this.documentStore.length / n)), this._idfCache[e] = i
}, t.Index.prototype.search = function(e) {
        var n = this.pipeline.run(t.tokenizer(e)),
            i = new t.Vector,
            o = [],
            r = this._fields.reduce(function(t, e) {
                return t + e.boost
            }, 0),
            s = n.some(function(t) {
                return this.tokenStore.has(t)
            }, this);
        if (!s) return [];
        n.forEach(function(e, n, s) {
            var a = 1 / s.length * this._fields.length * r,
                h = this,
                l = this.tokenStore.expand(e).reduce(function(n, o) {
                    var r = h.corpusTokens.indexOf(o),
                        s = h.idf(o),
                        l = 1,
                        u = new t.SortedSet;
                    if (o !== e) {
                        var c = Math.max(3, o.length - e.length);
                        l = 1 / Math.log(c)
                    }
                    return r & gt; - 1 & amp; & amp;
                    i.insert(r, a * s * l), Object.keys(h.tokenStore.get(o)).forEach(function(t) {
                        u.add(t)
                    }), n.union(u)
                }, new t.SortedSet);
            o.push(l)
        }, this);
        var a = o.reduce(function(t, e) {
            return t.intersect(e)
        });
        return a.map(function(t) {
            return {
                ref: t,
                score: i.similarity(this.documentVector(t))
            }
        }, this).sort(function(t, e) {
            return e.score - t.score
        })
    }, t.Index.prototype.documentVector = function(e) {
        for (var n = this.documentStore.get(e), i = n.length, o = new t.Vector, r = 0; i & gt; r; r++) {
            var s = n.elements[r],
                a = this.tokenStore.get(s)[e].tf,
                h = this.idf(s);
            o.insert(this.corpusTokens.indexOf(s), a * h)
        }
        return o
    }, t.Index.prototype.toJSON = function() {
        return {
            version: t.version,
            fields: this._fields,
            ref: this._ref,
            documentStore: this.documentStore.toJSON(),
            tokenStore: this.tokenStore.toJSON(),
            corpusTokens: this.corpusTokens.toJSON(),
            pipeline: this.pipeline.toJSON()
        }
    }, t.Index.prototype.use = function(t) {
        var e = Array.prototype.slice.call(arguments, 1);
        e.unshift(this), t.apply(this, e)
    }, t.Store = function() {
        this.store = {}, this.length = 0
    }, t.Store.load = function(e) {
        var n = new this;
        return n.length = e.length, n.store = Object.keys(e.store).reduce(function(n, i) {
            return n[i] = t.SortedSet.load(e.store[i]), n
        }, {}), n
    }, t.Store.prototype.set = function(t, e) {
        this.has(t) || this.length++, this.store[t] = e
    }, t.Store.prototype.get = function(t) {
        return this.store[t]
    }, t.Store.prototype.has = function(t) {
        return t in this.store
    }, t.Store.prototype.remove = function(t) {
        this.has(t) & amp; & amp;
        (delete this.store[t], this.length--)
    }, t.Store.prototype.toJSON = function() {
        return {
            store: this.store,
            length: this.length
        }
    }, t.stemmer = function() {
        var t = {
                ational: & quot;ate & quot;,
                tional: & quot;tion & quot;,
                enci: & quot;ence & quot;,
                anci: & quot;ance & quot;,
                izer: & quot;ize & quot;,
                bli: & quot;ble & quot;,
                alli: & quot;al & quot;,
                entli: & quot;ent & quot;,
                eli: & quot;e & quot;,
                ousli: & quot;ous & quot;,
                ization: & quot;ize & quot;,
                ation: & quot;ate & quot;,
                ator: & quot;ate & quot;,
                alism: & quot;al & quot;,
                iveness: & quot;ive & quot;,
                fulness: & quot;ful & quot;,
                ousness: & quot;ous & quot;,
                aliti: & quot;al & quot;,
                iviti: & quot;ive & quot;,
                biliti: & quot;ble & quot;,
                logi: & quot;log & quot;
            },
            e = {
                icate: & quot;ic & quot;,
                ative: & quot; & quot;,
                alize: & quot;al & quot;,
                iciti: & quot;ic & quot;,
                ical: & quot;ic & quot;,
                ful: & quot; & quot;,
                ness: & quot; & quot;
            },
            n = & quot;
        [ ^ aeiou] & quot;, i = & quot;
        [aeiouy] & quot;, o = n + & quot;
        [ ^ aeiouy] * & quot;, r = i + & quot;
        [aeiou] * & quot;, s = & quot; ^ ( & quot; + o + & quot;) ? & quot; + r + o, a = & quot; ^ ( & quot; + o + & quot;) ? & quot; + r + o + & quot;
        ( & quot; + r + & quot;) ? $ & quot;, h = & quot; ^ ( & quot; + o + & quot;) ? & quot; + r + o + r + o, l = & quot; ^ ( & quot; + o + & quot;) ? & quot; + i, u = new RegExp(s), c = new RegExp(h), f = new RegExp(a), d = new RegExp(l), p = /^(.+?)(ss|i)es$/, m = /^(.+?)([^s])s$/, v = /^(.+?)eed$/, y = /^(.+?)(ed|ing)$/, g = /.$/, S = /(at|bl|iz)$/, w = new RegExp( & quot;
                ([ ^ aeiouylsz])\\ 1 $ & quot;), x = new RegExp( & quot; ^ & quot; + o + i + & quot;
                [ ^ aeiouwxy] $ & quot;), k = /^(.+?[^aeiou])y$/, b = /^(.+?)(ational|tional|enci|anci|izer|bli|alli|entli|eli|ousli|ization|ation|ator|alism|iveness|fulness|ousness|aliti|iviti|biliti|logi)$/, E = /^(.+?)(icate|ative|alize|iciti|ical|ful|ness)$/, _ = /^(.+?)(al|ance|ence|er|ic|able|ible|ant|ement|ment|ent|ou|ism|ate|iti|ous|ive|ize)$/, F = /^(.+?)(s|t)(ion)$/, O = /^(.+?)e$/, P = /ll$/, N = new RegExp( & quot; ^ & quot; + o + i + & quot;
                [ ^ aeiouwxy] $ & quot;), T = function(n) {
                var i, o, r, s, a, h, l;
                if (n.length < /o.length;s++){var></h [o] ? i++ : a[i] > < /arguments.length;t++)e=arguments[t],~this.indexof(e)||this.elements.splice(this.locationfor(e),0,e);this.length=this.elements.length},t.sortedset.prototype.toarray=function(){return></i.idx) return >